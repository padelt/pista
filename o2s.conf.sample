
#    __            _                       
#   / _| ___  __ _| |_ _   _ _ __ ___  ___ 
#  | |_ / _ \/ _` | __| | | | '__/ _ \/ __|
#  |  _|  __/ (_| | |_| |_| | | |  __/\__ \
#  |_|  \___|\__,_|\__|\__,_|_|  \___||___/
#                                          

[features]

# If storage is False, no data will be written to the relational database
# store. This is useful *only* if redis is True, but is for special
# installations.

storage = True

# If plmn is True, mobile operator codes are looked up and republished.
# For example, when Greenwich says: ../operators 26201 +26202
# o2s will translate and republish as
#   ../operators/26201  T-Mobile (DE)
#   ../operators/26202  Vodafone (DE)

plmn = True

# If watcher is not None it is the name of a topic to which we publish
# a string representation of incoming data; this is useful for monitoring.
# These pubs are qos=0 and non-retained

watcher = "_look"

# If the `redis' feature is True, o2s will update a number of keys
# in Redis for the Web interface

redis = True

# Handle waypoints/geofences. If this is not None, it is the path to
# a file which will contain a pickled list of current geofences.

geofences = None

# If rawdata is True, o2s will create a database table (rawdata) to
# store off-the-wire publishes as the're seen. This is useful for
# debugging

rawdata = True

# If alarm is not None, it contains the path to a Python plugin which
# will fire when an alarm is detecte.

alarm = "alarmhelper.py"

# Defines a list of which trigger types (`t') should *not* be persisted to
# the database. This is a Python list.

t_ignore = [ 'p', ]

# Add support for `ctrld` in creating DB tables for it. This setting does
# not automatically launch ctrld.

ctrldauth = True

#   __  __  ___ _____ _____ 
#  |  \/  |/ _ \_   _|_   _|
#  | |\/| | | | || |   | |  
#  | |  | | |_| || |   | |  
#  |_|  |_|\__\_\|_|   |_|  
#                           

[mqtt]
host = localhost
port = 8883
username = 'jane'
password = 'secret'
client_id = 'yyyx01'
; ca_certs = None
ca_certs = '/path/to/ca.crt'
tls_version = 'tlsv1'
# tls_version = 'sslv3'
tls_insecure = False

# If skip_retained is True, messages retained by the broker will not
# be processed. Note that this can cause duplicate entries in DB.

skip_retained = False

# This is a Python list of topics to track. Note that just the base topic
# is required here; o2s subscribes to the required subtopics

base_topics = [ 'owntracks/gw', 'owntracks/jane']

# If maptopic isn't None, completed messages (with additional data) are
# republished to this topic for the Pista Map, Status and Tracks pages. If this
# is not defined, those pages will be empty.

maptopic = "_map"

# If the `geofences' feature is enabled and alert_topic is not None, it is an
# MQTT topic name to which geofence enter/leave events will be published. The
# payload will consist of a JSON object which is populated with the elements
# you wish from the list of available data, which includes any of
#
#             tid
#             lat
#             lon
#             cog
#             vel
#             alt
#             tstamp
#             compass
#             addr
#             cc
#             status
#             topic
#             tst
#             info
#
# Configure `alert_keys` to be a string of white-space separated names
# of the elements you require in the payload. The JSON payload will, in
# addition, contain the following elements:
#
#  "_type" : "alert"
#  "event" : "enters"                   // or "leaves"
#  "trigger"  : 1                       // or 0 (1 == enter, 0 == leave)
#  "km"       : "2.03"                  // distance in Km from center of waypoint
#  "meters"   : 2312                    // distance in meters "     "
#  "wpname"   : "Favorite restaurant"   // waypoint description from database
#  "wplat"    : xxx.xx                  // waypoint-configured lat
#  "wplon"    : yyy.yy                  // waypoint-configured lon
#
# These events are also published to _look, if configured
# If `alert_keys` is None, all keys are published.

alert_topic = "_alerts"
# alert_keys  = "addr tst lat tid"
alert_keys = None


#   ____  ____  
#  |  _ \| __ ) 
#  | | | |  _ \ 
#  | |_| | |_) |
#  |____/|____/ 
#               

[database]
dbengine = mysql
dbhost = 'localhost'
dbname = 'owntracks'
dbuser = 'jane'
dbpasswd = 'secret'

[revgeo]
enabled = True
ghashlen = 5  ; default=5
# The region_bias is a ccTLD country code which attempts to bias
# the type of data returned. (Compare "Toledo" in Spain with Toledo
# somewhere in the US.) We set map language to the same value.
# https://developers.google.com/maps/documentation/geocoding/?csw=1#RegionCodes
region_bias = "de"

[redis]
enabled = True
host = 'localhost'
port = 6379
db = 0
password = None
unix_socket_path = None

#        _        _     _ 
#    ___| |_ _ __| | __| |
#   / __| __| '__| |/ _` |
#  | (__| |_| |  | | (_| |
#   \___|\__|_|  |_|\__,_|
#                         

[ctrld]

; This is the CA certificate file in PEM format which will be returned to
; clients for them to connect to an MQTT broker. It is not necessarily
; the same as in [mqtt] above.

cacert_file = '/path/to/cacert.pem'

#         _     _        
#   _ __ (_)___| |_ __ _ 
#  | '_ \| / __| __/ _` |
#  | |_) | \__ \ || (_| |
#  | .__/|_|___/\__\__,_|
#  |_|                   

[pista]

# Which address:port should the Pista app listen on when started?
# Specify listen_host="0.0.0.0" to have it listen on all interfaces
# These settings are only valid when pista runs standalone.

listen_host = "localhost"
listen_port = 8080

# The following parameters are for the Websocket connections and
# most of these are made available to Web apps via a GET request
# to ../config.js.

[websocket]
host = "127.0.0.1"
port = 9001
reconnect_in = 5000 ; milliseconds
usetls = False
cleansession = True
username = None
password = None
# username = "jjolie"
# password = "s√©cret"

; if apikey is set, it must be a key obtained for Mapbox use ; (format:
; 'xxxxxx.AAAAAAAA') ; if set to None, OSM is used as map provider

apiKey = None

; This is the MQTT topic the Console subscribes to.

console_topic = "_look"

; This is the MQTT topic the Map and Table subscribes to. It *must*
; correspond to `maptopic' as configured for o2s, and it must not
; end with a slash.

maptopic = "_map"


# TABLE:
; Whether or not to show the topic name in Tables by default (can be toggled ;
; on/off in the UI) by default.

topic_visible = False

